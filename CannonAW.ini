[paths]
; Name of the project; files are saved in a subdirectory with this name
proj_name=CannonRiver_2layer_60mDEM_1200mMODFLOW
; Path to the GSFLOW executable
gsflow_exe=/home/awickert/models/GSFLOW-1.2.0/bin/gsflow
; GSFLOW version
gsflow_ver=1.2.0
; Path to the directory that will store your GSFLOW input and output files;
; each set of inputs and outputs will be stored in a subdirectory with the
; name "proj_name" (above)
gsflow_path_simdir=/home/awickert/dataanalysis/GSFLOW-GRASS-Cannon-River-Example/output

[elevation_inputs]
; leave the following blank if DEM already imported and corrected for offmap 
; flow, with flow accumulation already calculated and grid size calculated
; This can be any GDAL-compatible file
DEM_file_path_to_import=/home/awickert/dataanalysis/GSFLOW-GRASS-Cannon-River-Example/DEM60m.tif

[land-surface_inputs]
; GSFLOW-GRASS will obtain land-cover and soil inputs based on the first of
; these that is possible:
; (1) Import the files given below; if these are empty
; (2) Use the provided cov_type and soil_type (below); failing this
; (3) Look for existing GRASS GIS rasters called called "land_cover" and "soil"
; (4) If all of this is not possible, then default values will be chosen:
;     (cov_type = 0, soil_type=2
; Input land-cover file path
LAND_COVER_file_path_to_import=
; Input soil raster file path
SOIL_file_path_to_import=
; 0=bare soil; 1=grasses; 2=shrubs; 3=trees; 4=coniferous
cov_type=3
; 1=sand; 2=loam; 3=clay
soil_type=3

[GRASS_core]
; GIS database directory for GRASS -- "grassdata" is a common name (make this)
; not currently used -- just run inside an active GRASS GIS session
gisdb=/home/awickert/grassdata
; GRASS version number with no dot; this is not currently used
version=74

[run_mode]
; 1 for spin-up run starting from steady-state MODFLOW period
; 2 for restart run starting from state saved (uses below files)
sw_1spinup_2restart=1
; Paths to files for restarting runs, if sw_1spinup_2start=2
init_PRMSfil=/PATH/TO/RESTART/OUTFILE
init_MODfil=/PATH/TO/RESTART/OUTFILE.out

[time]
start_date=1938-05-12
end_date=1943-11-05
; only for restart runs: init_start_date - start_date of spinup run used as 
; init conditions. Note that spinup_end_date is assumed to be 1 day previous 
; to start_date.
init_start_date=

[GRASS_drainage]
; Raster grid giving weights for each cell for the amount of flow it contributes
; This can be, for example, precipitation rate
; GSFLOW-GRASS will first check for this file in the list of GRASS rasters, 
; and then look to import it from an outside raster source
; If this is empty, weights will be "1" everywhere.
flow_weights=
; Drainage value at which streams begin to be defined
; if flow_weights is not defined, this is simply the area in square meters
; at which a stream will become defined
threshold_drainage_area_meters2=9000000
; MODFLOW cell target side length; to fit grid, will not be exactly this value
MODFLOW_grid_resolution_meters=1200
; Pour point x
outlet_point_x=530313.122274
; Pour point y
outlet_point_y=4936183.15175

[GRASS_hydraulics]
; Method to compute hydraulic geometry; see ICALC in GSFLOW manual
icalc=1
; In-channel Manning's n (uniform across watershed)
; Overridden if other Manning's n options are not left blank
channel_Mannings_n=0.035
; Raster map of in-channel Manning's n values
channel_Mannings_n_grid=
; In-channel Manning's n vector map (in GRASS GIS location)
channel_Mannings_n_vector=
; In-channel Manning's n vector column name
channel_Mannings_n_vector_col=
; USED WHEN ICALC=3 ENABLED: Overbank Manning's n (uniform across watershed)
overbank_Mannings_n=0.060
; Channel width [m], uniform across watershed
; Overridden if options below are not left blank
channel_width=25
; Channel width vector map (in GRASS GIS location)
; overrides uniform channel width (above)
channel_width_vector=
; Channel width vector column (required if vector map, above, chosen)
channel_width_vector_col=
; USED WHEN ICALC=3 ENABLED
; Floodplain width [m], uniform across watershed
; Overridden if other floodplain options are not left blank
; 0 is default
floodplain_width=0
; USED WHEN ICALC=3 ENABLED
; Floodplain width vector map; overrides uniform channel width
floodplain_width_vector=
; USED WHEN ICALC=3 ENABLED
; Floodplain width vector column (required if vector map chosen)
floodplain_width_vector_col=

[climate_inputs]
; Climate data distribution
; 1: print spatially uniform climate data over all HRUs,
; using climat data from a the file specified in climate_data_file
; (immediately below)
; 0: select if user has pre-existing HRU-distributed climate files
fl_print_climate_hru=1
; File with climate data to be applied uniformly
; for fl_print_climate_hru=1
; Rows of `YYYY MM DD HH MM SS T_max T_min Precip`
climate_data_file=/home/awickert/dataanalysis/GSFLOW-GRASS-Cannon-River-Example/Precip_Zumbrota.txt
; Directory with user-generated climate_hru data files, containing:
; tmin.day, tmax.day, precip.day, and empty.day
; used if fl_print_climate_hru = 0
climate_hru_dir=

[hydrogeologic_inputs]
; Number of vertical layers in MODFLOW
NLAY=2
; Layer thickness [m] For multiple layers, enter comma-separated list,
; starting from the top layer.
DZ=20,200 
; set fl_create_hydcond=1 to implement Python script to create spatially 
; distributed hydraulic conductivity
fl_create_hydcond=0
; for uniform hydraulic conductivty [m/d]: enter list of values for each layer; 
; for spatially distriubted values: enter name of file with values
hydcond=1E-5,1
; for uniform infiltration [m/d]: enter single value; 
; for spatially distributed values: enter name of file with values
finf=0.0002
